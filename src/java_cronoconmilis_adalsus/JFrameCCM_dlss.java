/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package java_cronoconmilis_adalsus;

import java.util.Calendar;

/**
 *
 * @author adal -> www.bit.ly/adalsus
 */
public class JFrameCCM_dlss extends javax.swing.JFrame {

    public static String h0, m0, s0;
    
    /**
     * Creates new form JFrameGuia
     */
    public JFrameCCM_dlss() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel_tiempo = new javax.swing.JLabel();
        jLabel_milis = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Cron칩metro Reloj");
        setMinimumSize(new java.awt.Dimension(306, 104));
        setName("frameCronoReloj"); // NOI18N
        setResizable(false);

        jLabel_tiempo.setFont(new java.awt.Font("Serif", 1, 50)); // NOI18N
        jLabel_tiempo.setForeground(java.awt.Color.blue);
        jLabel_tiempo.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel_tiempo.setText("00:00:00");
        jLabel_tiempo.setToolTipText("");
        jLabel_tiempo.setAlignmentY(0.0F);
        jLabel_tiempo.setMaximumSize(new java.awt.Dimension(280, 104));
        jLabel_tiempo.setMinimumSize(new java.awt.Dimension(280, 104));
        jLabel_tiempo.setPreferredSize(new java.awt.Dimension(280, 104));

        jLabel_milis.setFont(new java.awt.Font("Serif", 1, 25)); // NOI18N
        jLabel_milis.setForeground(java.awt.Color.blue);
        jLabel_milis.setText("000");
        jLabel_milis.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel_tiempo, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel_milis, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel_tiempo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel_milis, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void reloj_main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrameCCM_dlss.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        
        //</editor-fold>
        //</editor-fold>
        
        //</editor-fold>

        h0="00";
        m0="00";
        s0="00";
       
        //Lo siguiente agarrar en ejecuci칩n MS-DOS
        //par치metros definidos separados por espacios
        if (args.length > 0) {
            h0 = args[0];
            if (Integer.parseInt(args[1])<=59) m0 = args[1]; 
            else m0 = "00"; 
            if (Integer.parseInt(args[2])<=59) s0 = args[2];
            else s0 = "00";
        }
        //        
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new JFrameCCM_dlss().setVisible(true);
        });
        
        Integer horas, minutos, segundos;
        horas = Integer.valueOf(h0);
        minutos = Integer.valueOf(m0);
        segundos = Integer.valueOf(s0);

        String hor=h0, min=m0, seg;
       
        long t1, t2;
        String st1, st2;
        Calendar ahora1 = Calendar.getInstance();
        t1 = ahora1.getTimeInMillis();
        st1 = Long.toString(t1);
        //System.out.println(st1);
        
        //Mientras cronometroActivo sea verdadero entonces seguira
        //aumentando el tiempo
        
        while( true ) {
            
            try {
                //La siguiente linea es para hacer un wait ayuda
                //para la precisi칩n del siguiente proceso.- demorar un segundo
                Thread.sleep(95);
                
                //Esto es lo que provoca la demorada del segundo exacto
                Calendar ahora2 = Calendar.getInstance();
                t2 = ahora2.getTimeInMillis();
                st2 = Long.toString(t2);
                //System.out.println("-> "+st2);
                jLabel_milis.setText(st2.substring(st2.length() - 3));
                if (st2.charAt(st2.length()-4)!=st1.charAt(st1.length()-4)) {
                    segundos += 1;
                    Calendar ahora3 = Calendar.getInstance();
                    t1 = ahora3.getTimeInMillis();
                    st1 = Long.toString(t1);
                    //System.out.println(st1);
                    jLabel_milis.setText(st1.substring(st1.length() - 3));
                }
                //fin de lo que provoca la demorada del segundo exacto
                
                if ( segundos == 60 ) {
                    segundos=0;
                    minutos += 1;
                }
                if( minutos == 60 ) {
                    minutos = 0;
                    horas++;
                }
                
                //Los siguientes if's es para colocar el cero
                //a los numeros menores a 9
                if( horas < 10 ) hor = "0" + horas;
                else hor = horas.toString();
                
                if( minutos < 10 ) min = "0" + minutos;
                else min = minutos.toString();
                
                if( segundos < 10 ) seg = "0" + segundos;
                else seg = segundos.toString();
                
                jLabel_tiempo.setText( hor + ":" + min + ":" + seg );
            } catch(Exception e){}
        }
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    protected static javax.swing.JLabel jLabel_milis;
    protected static javax.swing.JLabel jLabel_tiempo;
    // End of variables declaration//GEN-END:variables
}
